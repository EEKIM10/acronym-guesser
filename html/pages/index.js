import Head from 'next/head'
import styles from '../styles/Home.module.css'


async function submitEncodeForm(event) {
    event.preventDefault();
    const outputText = document.getElementById("output-encrypt-text");
    const outputKeys = document.getElementById("output-encrypt-keys");
    const formData = new FormData();
    formData.append("text", event.target.text.value);
    formData.append("shift", event.target.shift.value);
    formData.append("keys", event.target.keys.checked);
    const response = await fetch("/encrypt", {
        body: formData,
        method: "POST"
    });
    if (response.ok) {
        const data = await response.json();
        console.debug(JSON.stringify(data, null, 4));
        console.log(event.target.text.value + " -> " + data.encoded);
        outputText.textContent = data.encoded;
        if(data.keys!==undefined) {
            outputKeys.textContent = data.keys.join(" ");
        }
    } else {
        outputText.textContent = "Error.";
        outputKeys.textContent = "Error.";
    }
}

async function submitDecodeForm(event) {
    event.preventDefault();
    const outputText = document.getElementById("output-decrypt-text");
    const outputKeys = document.getElementById("output-decrypt-keys");
    const formData = new FormData();
    formData.append("text", event.target.text.value);
    formData.append("words", event.target.words.value || null);
    formData.append("key", event.target.known_key.value);
    const response = await fetch("/decrypt", {
        body: formData,
        method: "POST"
    });
    if (response.ok) {
        const data = await response.json();
        console.debug(JSON.stringify(data, null, 4));
        console.log(event.target.text.value + " -> " + data.decoded);
        outputText.textContent = data.decoded;
        outputKeys.textContent = data.key;
    } else {
        try {
            const data = await response.json();
            outputKeys.textContent = "Error.";
            outputText.textContent = data.detail;
        }
        catch {
            outputText.textContent = "Error."
        }
    }
}

export default function Home() {
    return (
        <div className={
            styles.container
        }>
            <Head>
                <title>Encrypt &amp; Decrypt
                </title>
                <meta name="description" content="Generated by create next app" />
            </Head>

            <main className={
                styles.main
            }>
                <h1>Encode &amp; Decode</h1>
                <h2>Encode:</h2>
                <div className={
                    styles.formContainer
                }>
                    <h3>Input</h3>
                    <form onSubmit={submitEncodeForm}>
                        <label htmlFor="text">Text:
                        </label>
                        <br />
                        <input name="text" id="text" type="text"
                            required={true}
                            minLength={1} />
                        <br />
                        <br />
                        <br />
                        <label htmlFor="shift">Shift:
                        </label>
                        <br />
                        <input name="shift" id="shift" type="number"
                            defaultValue={
                                Math.floor(Math.random() * 1000)
                            }
                            required={true} />
                        <br />
                        <br />
                        <br />
                        <label htmlFor="with_keys">With keys?
                        </label>
                        <br />
                        <input name="keys" id="keys" type="checkbox"
                            defaultChecked={1} />
                        <br />
                        <br />
                        <button>Submit</button>
                    </form>

                    <hr style={
                        { width: "60%" }
                    } />

                    <h3>Output</h3>
                    <div>
                        <div id={"output-encrypt-text"}>No text encrypted yet.</div>
                    </div>
                    <hr style={{width: "30%"}} />
                    <div>
                        <div id={"output-encrypt-keys"}>No encryption keys</div>
                    </div>
                </div>

                <hr style={
                    { width: "80%" }
                } />

                <div className={
                    styles.formContainer
                }>
                    <h2>Decode:</h2>
                    <form onSubmit={submitDecodeForm}>
                        <label htmlFor="text">Encoded text:
                        </label>
                        <br />
                        <input name="text" id="text" type="text"
                            required={true}
                            minLength={1} />
                        <br />
                        <br />
                        <br />
                        <label htmlFor="words">Known words:
                        </label>
                        <br />
                        <input name="words" id="words" type="text"
                            required={false}
                            placeholder={"Words you know will be in the encrypted text (separated by spaces)"} />
                        <br />
                        <br />
                        <input name="known_key" id="known_key" type="number" defaultValue={null} required={false}/>
                        <br />
                        <button>Submit</button>
                    </form>
                    <hr style={
                        { width: "60%" }
                    } />
                    <div>
                        <h3>Output</h3>
                        <div>
                            <div id={"output-decrypt-text"}>No text decrypted yet.</div>
                        </div>
                        <hr style={{width: "30%"}} />
                        <div>
                            <div id={"output-decrypt-keys"}>No encryption keys</div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    )
}
